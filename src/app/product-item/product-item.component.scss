@import '~@angular/material/theming';

// mixin name will be used in main style.scss
@mixin product-item-component-theme($theme) {
  
  // retrieve variables from theme 
  // (all possible variables, use only what you really need)
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, accent);
  $foreground: map-get($theme, foreground);
  
  // all of these variables contain many additional variables

    button {
    
      // retrieve particular color from variable, rg: text, base, divider, ...
      color: mat-color($foreground, text);
      background-color: blue !important;
      
      // or use "default" subvariable by default, oh the puns :)
      border: 1px solid mat-color($accent);
    }
  app-product-item {


    .mat-card-content {
      background: green;
    }
  }

  .OnSale {
    // Get the default hue for a palette.
    color: mat-color($primary);

    // Get a specific hue for a palette. 
    // See https://material.io/archive/guidelines/style/color.html#color-color-palette for hues.
    //background-color: mat-color($accent, 100);
    background-color: red;

    // Get a relative color for a hue ('lighter' or 'darker')
    outline-color: mat-color($accent, lighter);

    // Get a contrast color for a hue by adding `-contrast` to any other key.
    border-color: mat-color($primary, '100-contrast');
  }

}


.product {
  margin: 10px;
  float: left;
  width: 250px;
}

.img {
    width: 100%;
}

.container {
  padding: 2px 16px;
}
